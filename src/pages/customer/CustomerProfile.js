/**************************************************************************/
/*  CustomerProfile.js                                                    */
/**************************************************************************/
/*                       T·ªáp n√†y l√† m·ªôt ph·∫ßn c·ªßa:                         */
/*                             Open CDP                                   */
/*                        https://flast.vn                                */
/**************************************************************************/
/* B·∫£n quy·ªÅn (c) 2025 - n√†y thu·ªôc v·ªÅ c√°c c·ªông t√°c vi√™n Flast Solution     */
/* (xem AUTHORS.md).                                                      */
/* B·∫£n quy·ªÅn (c) 2024-2025 Long Huu, Quang Duc, Hung Bui                  */
/*                                                                        */
/* B·∫°n ƒë∆∞·ª£c quy·ªÅn s·ª≠ d·ª•ng ph·∫ßn m·ªÅm n√†y mi·ªÖn ph√≠ cho b·∫•t k·ª≥ m·ª•c ƒë√≠ch n√†o,  */
/* bao g·ªìm sao ch√©p, s·ª≠a ƒë·ªïi, ph√¢n ph·ªëi, b√°n l·∫°i‚Ä¶                         */
/*                                                                        */
/* Ch·ªâ c·∫ßn gi·ªØ nguy√™n th√¥ng tin b·∫£n quy·ªÅn v√† n·ªôi dung gi·∫•y ph√©p n√†y trong */
/* c√°c b·∫£n sao.                                                           */
/*                                                                        */
/* ƒê·ªôi ng≈© ph√°t tri·ªÉn mong r·∫±ng ph·∫ßn m·ªÅm ƒë∆∞·ª£c s·ª≠ d·ª•ng ƒë√∫ng m·ª•c ƒë√≠ch v√†    */
/* c√≥ tr√°ch nghi·ªám                                                        */
/**************************************************************************/

import React, { useState } from 'react';
import {
  Card,
  Typography,
  Tag,
  Table,
  Button,
  List,
  Avatar,
  Progress,
  Statistic,
  Row,
  Col,
  Divider,
  Checkbox,
  message
} from 'antd';

import { DollarCircleOutlined, MailOutlined, FileDoneOutlined } from "@ant-design/icons";
import { useEffectAsync } from 'hooks/MyHooks';
import RequestUtils from 'utils/RequestUtils';
import { SUCCESS_CODE } from 'configs';
import { formatTime } from 'utils/dataUtils';
import { InAppEvent } from 'utils/FuseUtils';
import { useNavigate } from 'react-router-dom';

const { Title, Text, Paragraph } = Typography;
const customer = {
  name: 'C√¥ng ty C·ªï Ph·∫ßn Flast Solution',
  contactName: 'Nguy·ªÖn VƒÉn A',
  position: 'Gi√°m ƒë·ªëc Kinh doanh',
  email: 'flast.vn@gmail.vn',
  phone: '090x.xxx.xxx',
  address: '35 L√™ VƒÉn L∆∞∆°ng',
  industry: 'C√¥ng ngh·ªá',
  createdAt: '15/03/2025',
  owner: 'L√™ H',
  priority: 'Cao',
  leadScore: 85
};

const opportunities = [
  { key: '1', name: 'CRM cho doanh nghi·ªáp', stage: 'Proposal', amount: '300 tri·ªáu ‚Ç´', closeDate: '30/04', probability: 70 },
  { key: '2', name: 'D·ªãch v·ª• b·∫£o tr√¨ n√¢ng cao', stage: 'Negotiation', amount: '80 tri·ªáu ‚Ç´', closeDate: '15/05', probability: 85 },
];

const wonDeals = [
  { amount: '150 tri·ªáu ‚Ç´', date: '03/2025' },
  { amount: '100 tri·ªáu ‚Ç´', date: '12/2024' },
];

const interactions = [
  { content: 'G·ª≠i b√°o gi√° CRM', date: '28/03', opened: true },
  { content: 'Cu·ªôc g·ªçi 15 ph√∫t ‚Äì Th·∫£o lu·∫≠n t√≠nh nƒÉng', date: '25/03' },
  { content: 'Truy c·∫≠p trang g√≥i cao c·∫•p (2 l·∫ßn)', date: '20/03' },
  { content: 'Tham gia webinar "T·ªëi ∆∞u v·∫≠n h√†nh"', date: '18/03' },
];

const products = [
  { name: 'CRM G√≥i C∆° b·∫£n', status: 'ƒêang s·ª≠ d·ª•ng', expiry: 'C√≤n 3 th√°ng' },
  { name: 'H·ªó tr·ª£ k·ªπ thu·∫≠t ti√™u chu·∫©n', status: 'ƒêang s·ª≠ d·ª•ng' },
];

const upsellSuggestions = ['G√≥i N√¢ng cao', 'B·∫£o tr√¨', 'T∆∞ v·∫•n tri·ªÉn khai'];

const stats = {
  totalSales: '480 tri·ªáu ‚Ç´',
  avgOrder: '120 tri·ªáu ‚Ç´',
  clv: '1.2 t·ª∑ ‚Ç´',
};

const alerts = [
  'ƒê∆°n h√†ng g·∫ßn ƒë√¢y nh·∫•t: 20/05/2025',
  'Ch∆∞a t∆∞∆°ng t√°c >14 ng√†y'
];

const CustomerProfile = () => {

  const navigate = useNavigate();
  const [ data, setData ] = useState({});
  const [ iCustomer, setCustomer ] = useState({});

  useEffectAsync(async () => {
    let { data, errorCode } = await RequestUtils.Get(`/customer/report-by-id/${24}`);
    if (errorCode === SUCCESS_CODE) {
      let { iCustomer, ...rest } = data;
      setData(rest);
      setCustomer(iCustomer)
    }
  }, []);

  const onEditCustomer = () => InAppEvent.openDrawer("#customer.edit", {
    title: 'C·∫≠p nh·∫≠t th√¥ng tin kh√°ch h√†ng #' + iCustomer.id,
    iCustomer,
    onSave: (newCustomer) => setCustomer(newCustomer)
  });

  const onCreateOpportunity = () => {
    if( (data?.lead?.id || '') === '') {
      message.error("Kh√°ch h√†ng ch∆∞a t·∫°o lead !");
      return;
    }
    let uri = RequestUtils.generateUrlGetParams("/sale/ban-hang", {dataId: data.lead.id});
    navigate(uri);
  }

  return (
    <div style={{ padding: '24px', backgroundColor: '#f5f5f5', minHeight: '100vh' }}>
      <Card style={{ marginBottom: '24px', borderRadius: '8px' }}>
        <Row justify="space-between" align="top" gutter={[16, 16]}>
          <Col xs={24} md={16}>
            <Title level={3} style={{ marginBottom: 15 }}>
              {iCustomer?.name}
            </Title>
            <p style={{ margin: '10px 0px' }}>
              <Text strong>
                Kinh doanh ph·ª• tr√°ch ({data.saleName})
              </Text>
            </p>
            <p style={{ margin: '10px 0px' }}>
              <Text type="secondary" style={{ display: 'flex', gap: 8 }}>
                {iCustomer?.email &&
                  <span>‚úâÔ∏è {iCustomer?.email} |</span>
                }
                <span> üìû {iCustomer?.mobile} | </span>
                <span> üìç {iCustomer?.address || '(Ch∆∞a c√≥ ƒë·ªãa ch·ªâ)'} </span>
              </Text>
            </p>
            <div style={{ marginTop: '8px' }}>
              <Tag color="red">ƒêi·ªÉm ch·∫°m (3)</Tag>
              <Tag color="orange">∆Øu ti√™n: {customer.priority}</Tag>
              <Tag>ƒêi·ªÉm ƒë√°nh gi√° t·ª´ CSKH: {customer.leadScore}/100</Tag>
            </div>
          </Col>
          <Col xs={24} md={8} style={{ textAlign: 'right' }}>
            <Button onClick={onEditCustomer} style={{ marginRight: 8 }}>
              S·ª≠a
            </Button>
            <Button disabled type="dashed" style={{ marginRight: 8 }}>
              G·ª≠i email
            </Button>
            <Button disabled type="default" style={{ marginRight: 8 }}>
              G·ªçi qua CallCenter
            </Button>
            <br />
            <Button type="default" style={{ marginTop: 8 }} onClick={onCreateOpportunity}>
              T·∫°o c∆° h·ªôi
            </Button>
          </Col>
        </Row>
      </Card>

      <Row gutter={[16, 16]}>
        <Col xs={24} lg={16}>
          <Card title="Doanh s·ªë & C∆° h·ªôi" style={{ marginBottom: 16 }}>
            <Row gutter={16}>
              <Col span={8}>
                <Statistic title="T·ªïng doanh s·ªë" value={stats.totalSales} prefix="‚Ç´" />
              </Col>
              <Col span={8}>
                <Statistic title="ƒê∆°n h√†ng trung b√¨nh" value={stats.avgOrder} prefix="‚Ç´" />
              </Col>
              <Col span={8}>
                <Statistic title="CLV ∆∞·ªõc t√≠nh" value={stats.clv} prefix="‚Ç´" />
              </Col>
            </Row>
            <Divider />
            <Title level={5}>C∆° h·ªôi ƒëang x·ª≠ l√Ω</Title>
            <Table
              dataSource={opportunities}
              pagination={false}
              size="small"
              columns={[
                { title: 'T√™n', dataIndex: 'name' },
                { title: 'Giai ƒëo·∫°n', dataIndex: 'stage' },
                { title: 'Gi√° tr·ªã', dataIndex: 'amount' },
                { title: 'D·ª± ki·∫øn ch·ªët', dataIndex: 'closeDate' },
                {
                  title: 'X√°c su·∫•t',
                  dataIndex: 'probability',
                  render: (prob) => <Progress percent={prob} size="small" />,
                },
              ]}
            />
            <div style={{ marginTop: 12 }}>
              <Text type="success">
                ‚úÖ ƒê√£ ch·ªët ({wonDeals.length}):{' '}
                {wonDeals.map((d, i) => (
                  <span key={i}>
                    {d.amount} ({d.date}){' '}
                  </span>
                ))}
              </Text>
            </div>
          </Card>

          <Card title="T∆∞∆°ng t√°c & H√†nh vi" style={{ marginBottom: 16 }}>
            <List
              dataSource={interactions}
              renderItem={(item) => (
                <List.Item>
                  <List.Item.Meta
                    avatar={<Avatar style={{ backgroundColor: '#1890ff' }}>üí¨</Avatar>}
                    title={
                      <Text>
                        {item.content}{' '}
                        {item.opened && <Tag color="blue" style={{ marginLeft: 8 }}>ƒê√£ m·ªü</Tag>}
                      </Text>
                    }
                    description={<Text type="secondary">{item.date}</Text>}
                  />
                </List.Item>
              )}
            />
            <Text strong>S·∫£n ph·∫©m / D·ªãch v·ª• (3), CSKH (5)</Text>
          </Card>

          <Card title="S·∫£n ph·∫©m & D·ªãch v·ª•" style={{ marginBottom: 16 }}>
            <Title level={5}>ƒêang s·ª≠ d·ª•ng</Title>
            {products.map((p, i) => (
              <div key={i} style={{ marginBottom: 8 }}>
                <Text strong>{p.name}</Text> ‚Äì <Tag color="green">{p.status}</Tag>{' '}
                {p.expiry && <Text type="secondary">({p.expiry})</Text>}
              </div>
            ))}
          </Card>
        </Col>

        {/* C·ªôt ph·∫£i */}
        <Col xs={24} lg={8}>
          <Card title="Ghi ch√∫ & Nhi·ªám v·ª•" style={{ marginBottom: 16 }}>
            <Title level={5}>Ghi ch√∫</Title>
            <Paragraph style={{ fontSize: 13, color: '#595959', fontStyle: 'italic' }}>
              Quan t√¢m s·∫£n ph·∫©m {data?.lead?.productName} ng√†y {formatTime(data?.lead?.inTime)}
            </Paragraph>

            <Divider />
            <Title level={5}>Nhi·ªám v·ª•</Title>
            <List
              dataSource={data?.activities}
              renderItem={(task) => (
                <List.Item>
                  <Checkbox checked={task.completed}>{task.name}</Checkbox>{' '}
                  <Text type="secondary" style={{ marginLeft: 8 }}>
                    ({formatTime(task.dueDate)})
                  </Text>
                </List.Item>
              )}
            />
          </Card>

          <Card title="Th·ªëng k√™ nhanh" style={{ marginBottom: 16 }}>
            <Row gutter={[16, 8]} style={{ textAlign: 'center' }}>
              <Col span={8}>
                <div style={{ fontSize: 20, fontWeight: 'bold', color: '#1890ff' }}>{data?.summary?.leads}</div>
                <Tag icon={<MailOutlined />} color="blue" style={{ marginTop: 6 }}>
                  Lead
                </Tag>
              </Col>
              <Col span={8}>
                <div style={{ fontSize: 20, fontWeight: 'bold', color: '#52c41a' }}>{data?.summary?.opportunities}</div>
                <Tag icon={<FileDoneOutlined />} color="green" style={{ marginTop: 6 }}>
                  C∆° h·ªôi
                </Tag>
              </Col>
              <Col span={8}>
                <div style={{ fontSize: 20, fontWeight: 'bold', color: '#fa8c16' }}>{data?.summary?.orders}</div>
                <Tag icon={<DollarCircleOutlined />} color="orange" style={{ marginTop: 6 }}>
                  ƒê∆°n h√†ng
                </Tag>
              </Col>
            </Row>

            <Divider />
            <Title level={5}>T∆∞∆°ng t√°c g·∫ßn nh·∫•t</Title>
            {alerts.map((alert, i) => (
              <div key={i} style={{ color: 'orange', marginBottom: 8 }}>
                ‚ö†Ô∏è {alert}
              </div>
            ))}
            <Divider />
            <div>
              {data?.tag?.map((tag, i) => (
                <Tag key={i} color="#108ee9" style={{ marginRight: 8, marginBottom: 8 }}>
                  {tag}
                </Tag>
              ))}
            </div>

            <Divider />
            <Title level={5}>G·ª£i √Ω Upsell</Title>
            {upsellSuggestions.map((s, i) => (
              <Tag key={i} color="#ccc" style={{ marginRight: 8, marginBottom: 8 }}>
                {s}
              </Tag>
            ))}
            <div style={{ marginTop: 8, color: 'orange' }}>
              ‚ö†Ô∏è D·ªØ li·ªáu ch∆∞a ƒë·ªß ƒë·ªÉ G·ª£i √Ω s·∫£n ph·∫©m Upsell
            </div>
          </Card>
        </Col>
      </Row>
    </div>
  )
};

export default CustomerProfile;